package cn.kane.quartz.admin.domain;

import java.util.ArrayList;
import java.util.List;

public class AdminTriggerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public AdminTriggerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTriggeridIsNull() {
            addCriterion("TRIGGERID is null");
            return (Criteria) this;
        }

        public Criteria andTriggeridIsNotNull() {
            addCriterion("TRIGGERID is not null");
            return (Criteria) this;
        }

        public Criteria andTriggeridEqualTo(Long value) {
            addCriterion("TRIGGERID =", value, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridNotEqualTo(Long value) {
            addCriterion("TRIGGERID <>", value, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridGreaterThan(Long value) {
            addCriterion("TRIGGERID >", value, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridGreaterThanOrEqualTo(Long value) {
            addCriterion("TRIGGERID >=", value, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridLessThan(Long value) {
            addCriterion("TRIGGERID <", value, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridLessThanOrEqualTo(Long value) {
            addCriterion("TRIGGERID <=", value, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridIn(List<Long> values) {
            addCriterion("TRIGGERID in", values, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridNotIn(List<Long> values) {
            addCriterion("TRIGGERID not in", values, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridBetween(Long value1, Long value2) {
            addCriterion("TRIGGERID between", value1, value2, "triggerid");
            return (Criteria) this;
        }

        public Criteria andTriggeridNotBetween(Long value1, Long value2) {
            addCriterion("TRIGGERID not between", value1, value2, "triggerid");
            return (Criteria) this;
        }

        public Criteria andJobidIsNull() {
            addCriterion("JOBID is null");
            return (Criteria) this;
        }

        public Criteria andJobidIsNotNull() {
            addCriterion("JOBID is not null");
            return (Criteria) this;
        }

        public Criteria andJobidEqualTo(Long value) {
            addCriterion("JOBID =", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidNotEqualTo(Long value) {
            addCriterion("JOBID <>", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidGreaterThan(Long value) {
            addCriterion("JOBID >", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidGreaterThanOrEqualTo(Long value) {
            addCriterion("JOBID >=", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidLessThan(Long value) {
            addCriterion("JOBID <", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidLessThanOrEqualTo(Long value) {
            addCriterion("JOBID <=", value, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidIn(List<Long> values) {
            addCriterion("JOBID in", values, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidNotIn(List<Long> values) {
            addCriterion("JOBID not in", values, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidBetween(Long value1, Long value2) {
            addCriterion("JOBID between", value1, value2, "jobid");
            return (Criteria) this;
        }

        public Criteria andJobidNotBetween(Long value1, Long value2) {
            addCriterion("JOBID not between", value1, value2, "jobid");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("DESCRIPTION =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("DESCRIPTION <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("DESCRIPTION >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("DESCRIPTION <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("DESCRIPTION like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("DESCRIPTION not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("DESCRIPTION in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("DESCRIPTION not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("DESCRIPTION between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("DESCRIPTION not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andGroupIsNull() {
            addCriterion("GROUP is null");
            return (Criteria) this;
        }

        public Criteria andGroupIsNotNull() {
            addCriterion("GROUP is not null");
            return (Criteria) this;
        }

        public Criteria andGroupEqualTo(String value) {
            addCriterion("GROUP =", value, "group");
            return (Criteria) this;
        }

        public Criteria andGroupNotEqualTo(String value) {
            addCriterion("GROUP <>", value, "group");
            return (Criteria) this;
        }

        public Criteria andGroupGreaterThan(String value) {
            addCriterion("GROUP >", value, "group");
            return (Criteria) this;
        }

        public Criteria andGroupGreaterThanOrEqualTo(String value) {
            addCriterion("GROUP >=", value, "group");
            return (Criteria) this;
        }

        public Criteria andGroupLessThan(String value) {
            addCriterion("GROUP <", value, "group");
            return (Criteria) this;
        }

        public Criteria andGroupLessThanOrEqualTo(String value) {
            addCriterion("GROUP <=", value, "group");
            return (Criteria) this;
        }

        public Criteria andGroupLike(String value) {
            addCriterion("GROUP like", value, "group");
            return (Criteria) this;
        }

        public Criteria andGroupNotLike(String value) {
            addCriterion("GROUP not like", value, "group");
            return (Criteria) this;
        }

        public Criteria andGroupIn(List<String> values) {
            addCriterion("GROUP in", values, "group");
            return (Criteria) this;
        }

        public Criteria andGroupNotIn(List<String> values) {
            addCriterion("GROUP not in", values, "group");
            return (Criteria) this;
        }

        public Criteria andGroupBetween(String value1, String value2) {
            addCriterion("GROUP between", value1, value2, "group");
            return (Criteria) this;
        }

        public Criteria andGroupNotBetween(String value1, String value2) {
            addCriterion("GROUP not between", value1, value2, "group");
            return (Criteria) this;
        }

        public Criteria andCronexprIsNull() {
            addCriterion("CRONEXPR is null");
            return (Criteria) this;
        }

        public Criteria andCronexprIsNotNull() {
            addCriterion("CRONEXPR is not null");
            return (Criteria) this;
        }

        public Criteria andCronexprEqualTo(String value) {
            addCriterion("CRONEXPR =", value, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprNotEqualTo(String value) {
            addCriterion("CRONEXPR <>", value, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprGreaterThan(String value) {
            addCriterion("CRONEXPR >", value, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprGreaterThanOrEqualTo(String value) {
            addCriterion("CRONEXPR >=", value, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprLessThan(String value) {
            addCriterion("CRONEXPR <", value, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprLessThanOrEqualTo(String value) {
            addCriterion("CRONEXPR <=", value, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprLike(String value) {
            addCriterion("CRONEXPR like", value, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprNotLike(String value) {
            addCriterion("CRONEXPR not like", value, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprIn(List<String> values) {
            addCriterion("CRONEXPR in", values, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprNotIn(List<String> values) {
            addCriterion("CRONEXPR not in", values, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprBetween(String value1, String value2) {
            addCriterion("CRONEXPR between", value1, value2, "cronexpr");
            return (Criteria) this;
        }

        public Criteria andCronexprNotBetween(String value1, String value2) {
            addCriterion("CRONEXPR not between", value1, value2, "cronexpr");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated do_not_delete_during_merge Wed Jan 21 14:33:05 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table QUARTZ_ADMIN_TRIGGER
     *
     * @mbggenerated Wed Jan 21 14:33:05 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}